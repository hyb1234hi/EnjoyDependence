dynamicDependency {
    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
    properties.load(inputStream)

    lib_common {
        //如果是true，则使用本地模块作为依赖参与编译，否则使用下面的配置获取远程的构件作为依赖参与编译
        debuggable = properties.getProperty("lib_common") ? false : true
        groupId = "com.youzan.mobile"
        artifactId = "lib_common" // 默认使用模块的名称作为其值
        version = properties.getProperty("lib_common")
    }
    liba {
        //如果是true，则使用本地模块作为依赖参与编译，否则使用下面的配置获取远程的构件作为依赖参与编译
        debuggable = properties.getProperty("liba") ? false : true
        groupId = "com.youzan.mobile"
        artifactId = "liba" // 默认使用模块的名称作为其值
        version = properties.getProperty("liba")
    }
    libb {
        //如果是true，则使用本地模块作为依赖参与编译，否则使用下面的配置获取远程的构件作为依赖参与编译
        debuggable = properties.getProperty("libb") ? false : true
        groupId = "com.youzan.mobile"
        artifactId = "libb" // 默认使用模块的名称作为其值
        version = properties.getProperty("libb")
    }
}